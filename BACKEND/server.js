const express = require("express");
const mongoose = require("mongoose");
const cors = require("cors");
const dotenv = require("dotenv");
const app = express();
dotenv.config();

const PORT = process.env.PORT || 8070;

app.use(cors());
app.use(express.json());

const URL = process.env.MONGODB_URL;

mongoose.connect(URL, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
  useCreateIndex: true, // Ensure index creation for improved query performance
  autoIndex: false, // Disable automatic index creation in production
});

const connection = mongoose.connection;

connection.on("error", (err) => {
  console.error("MongoDB connection error:", err);
  process.exit(1); // Exit the application if there is an error connecting to the database
});

connection.once("open", () => {
  console.log("MongoDB connection successful!");
});

// Event_Routes
const eventRouter = require("./routes/events.js");
app.use("/event", eventRouter);

// RemovedEvent_Routes
const removedEventRouter = require("./routes/removedReservation");
app.use("/removedEvent", removedEventRouter);

// Rental_Routes
const rentalRouter = require("./routes/rentalController.js");
app.use("/rental", rentalRouter);

// Employee_Routes
const employeeRouter = require("./routes/employees.js");
app.use("/employee", employeeRouter);

// RemovedEmployee_Routes
const removedEmpRouter = require("./routes/removedEmployees.js");
app.use("/REmployee", removedEmpRouter);

// Vehicle_Routes
const vehicleRouter = require("./routes/vehicles.js");
app.use("/vehicle", vehicleRouter);

// VehicleRemove_Routes
const vehicleRemoveRouter = require("./routes/removeVehicleController.js");
app.use("/vehicleRemove", vehicleRemoveRouter);

// Login_Routes
const loginRouter = require("./routes/login.js");
app.use("/login", loginRouter);

app.listen(PORT, () => {
  console.log(`Server is up and running on port: ${PORT}`);
});
