import React, { useState } from 'react';
import axios from 'axios';
import { useHistory } from 'react-router-dom';
import Swal from 'sweetalert2';
import { GoogleLogin } from '@react-oauth/google';
import jwt_decode from 'jwt-decode';
import { useGoogleLogin } from '@react-oauth/google';

export default function LoginUser() {
  let history = useHistory();
  const [username, setUserName] = useState('');
  const [password, setPassword] = useState('');
  const [login, setLogin] = useState([]);

  const googleLogin = useGoogleLogin({
    onSuccess: async (response) => {
      try {
        const res = await axios.get(
          'https://www.googleapis.com/oauth2/v3/userinfo',
          {
            headers: {
              Authorization: 'Bearer ${response.access_token)',
            },
          }
        );
        console.log(res);
      } catch (err) {
        console.log(err);
      }
    },
    onFailure: (response) => {
      console.log(response);
    },
  });

  function checkUser(e) {
    //function checks the availbilty of the admin within the system
    e.preventDefault();
    //pass the username and password and if exact user exsits will be directed to dashbord else it will display error for unavailable user
    axios
      .get(`http://localhost:8070/login/get/${username}/${password}`)
      .then((response) => {
        console.log(response.data);
        setLogin(response.data.login);
        if (response.data.login === null) {
          alert('User not available');
          sessionStorage.setItem('authorized', false);
          sessionStorage.getItem('authorized');
        } else {
          sessionStorage.setItem('authorized', true);
          sessionStorage.getItem('authorized');

          Swal.fire({
            title: 'Success!',
            text: 'User Available',
            icon: 'success',
            showConfirmButton: false,
            timer: 2000,
          });
          // alert("User available");
          if (response.data.login.username === 'admin') {
            //         "username" : "CM001",
            //          "password" : "home"
            history.push('/rentalList');
          } else if (response.data.login.username === 'TD002') {
            // "username" : "TD002",
            // "password" : "lalithya"
            history.push('/vehicle/viewVehicle');
          } else if (response.data.login.username === 'RD003') {
            // "username" : "ED003",
            // "password" : "isura"
            history.push('/viewEvent');
          } else if (response.data.login.username === 'RT004') {
            // "username" : "ET004",
            // "password" : "oshada"
            history.push('/rentalList');
          } else if (response.data.login.username === 'ED005') {
            // "username" : "IM005",
            // "password" : "udana"
            history.push('/allEmp');
          }
        }
      })
      .catch((err) => {
        alert(err.response.data.error);
      });
  }

  return (
    <div>
      <br />

      <br />

      <div className="container">
        <div className="row px-3">
          <div className="col-lg-10 col-xl-9 card flex-row mx-auto px-0">
            <div className="img-left d-none d-md-flex">
              <img src="/images/City driver.png" width="350px" height="350px" />
            </div>
            <div className="card-body">
              <h4 className="title text-center mt-4">Login</h4>
              <form className="form-box px-3" onSubmit={checkUser}>
                <div className="form-input">
                  <input
                    type="text"
                    name=""
                    placeholder="Username"
                    tabIndex="10"
                    required
                    onChange={(event) => {
                      setUserName(event.target.value);
                    }}
                  />
                </div>
                <div className="form-input">
                  <input
                    type="password"
                    name=""
                    placeholder="Password"
                    tabIndex="10"
                    required
                    onChange={(event) => {
                      setPassword(event.target.value);
                    }}
                  />
                </div>

                <div className="mb-3">
                  <button
                    type="submit"
                    className="btn btn-block text-uppercase"
                  >
                    Login
                  </button>
                </div>
                <div className="mb-3 d-flex flex-row justify-content-center">
                  <GoogleLogin
                    onSuccess={(credentialResponse) => {
                      console.log(credentialResponse);
                      if (
                        credentialResponse.clientId !== '' ||
                        credentialResponse.clientId !== null ||
                        credentialResponse.clientId !== undefined
                      ) {
                        sessionStorage.setItem('authorized', true);
                        history.push('/allEmp');
                      }
                    }}
                    onError={() => {
                      console.log('Login Failed');
                    }}
                    useOneTap
                  />
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>

      <br />
      <br />
      <br />
      <br />

      <br />
      <br />

      <br />
      <br />
      <br />

      <br />
      <br />
    </div>
  );
}
