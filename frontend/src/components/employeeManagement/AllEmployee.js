import axios from 'axios';
import React, { useState, useEffect } from 'react';
import { Modal } from 'react-bootstrap';
import Swal from 'sweetalert2';
import { Redirect } from 'react-router-dom';

import UpdateEmployee from './UpdateEmployee';

import Header from '../../Header';

export default function AllEmployee({ authorized }) {
  const apiUrl = process.env.REACT_APP_API_BASE_URL;

  const [employees, setEmployees] = useState([]);

  const [ModalEmpUpdate, setModalEmpUpdate] = useState([]);
  const [ModalEmpUpdateConfirm, setModalEmpUpdateConfirm] = useState(false);

  const [ModalEmpDelete, setModalEmpDelete] = useState([]);
  const [ModalEmpDeleteConfirm, setModalEmpDeleteConfirm] = useState(false);

  useEffect(() => {
    getEmployees();
  }, []);

  console.log('authorized', authorized);

  if (!authorized) {
    return <Redirect to="/" />;
  }

  function getEmployees() {
    console.log('getEmployees', apiUrl);
    axios
      .get(apiUrl + 'employee/allEmp')
      .then((res) => {
        setEmployees(res.data.reverse());
      })
      .catch((error) => {
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'Something went wrong!',
          confirmButtonColor: '#207159',
        });
      });
  }

  const deleteEmployee = async (data) => {
    await axios
      .post(apiUrl + 'REmployee/addRemovedEmp/', { data })
      .then(() => {
        Swal.fire({
          title: 'Success!',
          text: 'Permenantly deleted the Employee Record',
          icon: 'success',
          showConfirmButton: false,
          timer: 1500,
        });
        const value = axios.post(apiUrl + 'employee/deleteEmp', ModalEmpDelete);
        if (value) {
          Swal.fire({
            title: 'Success!',
            text: 'Permenantly deleted the Employee Record &  added successfully into the Removed Employee List !!',
            icon: 'success',
            showConfirmButton: false,
            timer: 2000,
          }).then(() => {
            window.location.reload();
          });
        }
      })
      .catch((err) => {
        Swal.fire({
          icon: 'error',
          title: 'Oops...',
          text: 'Something went wrong!',
          confirmButtonColor: '#207159',
        }).then(() => {
          window.location.reload();
        });
        alert(err.response.data.errorCode);
      });
  };

  const openModalEmpUpdate = (data) => {
    setModalEmpUpdate(data);
    setModalEmpUpdateConfirm(true);
  };

  const openModalEmpDelete = (data) => {
    setModalEmpDelete(data);
    setModalEmpDeleteConfirm(true);
  };

  return (
    <div className="container pt-2">
      <div className="page-component-body">
        <Header></Header>

        <div className="table-emp">
          <div className="row table-head mt-3">
            <div className="col">
              <h3 className="float-left ">List of current employees</h3>
            </div>
            <a href="/addEmp" className="float-right">
              <button className="btn btn-ok white">Add Employee</button>
            </a>
            <a href="/REmp" className="float-right">
              <button className="btn btn-ok white">Resigned Employees</button>
            </a>
          </div>

          <table className="table table-hover">
            <thead className="thead-dark">
              <tr>
                <th className="text-center">EmpName</th>
                <th className="text-center">Email</th>
                <th className="text-center">Phone</th>
                <th className="text-center">NIC</th>
                <th className="text-right">Designation</th>
                <th className="text-right">Action</th>
              </tr>
            </thead>
            <tbody>
              {employees.map((employee) => {
                return (
                  <tr>
                    <td className="text-center">{employee.Name}</td>
                    <td className="text-center">{employee.Email}</td>
                    <td className="text-center">{employee.Phone}</td>
                    <td className="text-center">{employee.NIC}</td>
                    <td className="text-right">{employee.Designation}</td>
                    <td className="text-center">
                      <button
                        className="btn btn-light btn-sm"
                        onClick={() => openModalEmpUpdate(employee)}
                      >
                        Update
                      </button>
                      <button
                        onClick={() => openModalEmpDelete(employee)}
                        className="btn btn-danger btn-sm"
                      >
                        Delete
                      </button>
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </table>
        </div>

        <Modal
          show={ModalEmpUpdateConfirm}
          onHide={() => setModalEmpUpdateConfirm(false)}
          size="lg"
          aria-labelledby="contained-modal-title-vcenter"
          centered
        >
          <UpdateEmployee
            data={ModalEmpUpdate}
            onHide={() => setModalEmpUpdate(false)}
          />
        </Modal>

        <Modal
          show={ModalEmpDeleteConfirm}
          onHide={() => setModalEmpDeleteConfirm(false)}
          size="md"
          aria-labelledby="contained-modal-title-vcenter"
          centered
        >
          <Modal.Header closeButton>
            <Modal.Title>Confirm Deletion</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <p>Would you like to remove this employee's details ?</p>
          </Modal.Body>
          <Modal.Footer>
            <div className="row">
              <div className="col -6">
                <button
                  type="submit"
                  className="btn btn-delete"
                  onClick={() => {
                    deleteEmployee(ModalEmpDelete);
                  }}
                >
                  Confirm
                </button>
              </div>
              <div
                className="col-6 text-right"
                onClick={() => setModalEmpDeleteConfirm(false)}
              >
                <button type="reset" className="btn btn-reset">
                  cancel
                </button>
              </div>
            </div>
          </Modal.Footer>
        </Modal>
      </div>
    </div>
  );
}
